version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: catalog_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gateway-network

  # Сервис для сборки productService
  productServiceBuild:
    image: openjdk:23-slim
    container_name: product_service_build
    volumes:
      - ./productService:/app  # Монтируем каталог productService
    working_dir: /app  # Устанавливаем рабочую директорию
    command: bash -c "apt-get update && apt-get install -y maven && mvn clean package"  # Сборка productService
    depends_on:
      - postgres
    networks:
      - gateway-network

  # Сервис для сборки orderService
  orderServiceBuild:
    image: openjdk:23-slim
    container_name: order_service_build
    volumes:
      - ./orderService:/app  # Монтируем каталог orderService
    working_dir: /app  # Устанавливаем рабочую директорию
    command: bash -c "apt-get update && apt-get install -y maven && mvn clean package"  # Сборка orderService
    depends_on:
      - postgres
    networks:
      - gateway-network

  # Сервис для сборки apiGateway
  apiGatewayBuild:
    image: openjdk:23-slim
    container_name: api_gateway_build
    volumes:
      - ./apiGateway:/app  # Монтируем каталог apiGateway
    working_dir: /app  # Устанавливаем рабочую директорию
    command: bash -c "apt-get update && apt-get install -y maven && mvn clean package"  # Сборка apiGateway
    depends_on:
      - postgres
    networks:
      - gateway-network

  productService:
    image: openjdk:23-jdk-slim
    container_name: product-service
    volumes:
      - ./productService/target/productService-0.0.1-SNAPSHOT.jar:/app/productService.jar
    command: ["sh", "-c", "until [ -f /app/productService.jar ]; do echo 'Waiting for productService.jar'; sleep 2; done; java -jar /app/productService.jar"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/catalog_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - productServiceBuild  # Зависимость от сборки productService
    networks:
      - gateway-network

  orderService:
    image: openjdk:23-jdk-slim
    container_name: order-service
    volumes:
      - ./orderService/target/orderService-0.0.1-SNAPSHOT.jar:/app/orderService.jar
    command: ["sh", "-c", "until [ -f /app/orderService.jar ]; do echo 'Waiting for orderService.jar'; sleep 2; done; java -jar /app/orderService.jar"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/catalog_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - orderServiceBuild  # Зависимость от сборки orderService
    networks:
      - gateway-network

  apiGateway:
    image: openjdk:23-jdk-slim
    container_name: api-gateway
    volumes:
      - ./apiGateway/target/apiGateway-0.0.1-SNAPSHOT.jar:/app/apiGateway.jar
    command: ["sh", "-c", "until [ -f /app/apiGateway.jar ]; do echo 'Waiting for apiGateway.jar'; sleep 2; done; java -jar /app/apiGateway.jar"]
    ports:
      - "8090:8090"
    depends_on:
      - productService
      - orderService
      - apiGatewayBuild  # Зависимость от сборки apiGateway
    networks:
      - gateway-network

volumes:
  postgres_data:

networks:
  gateway-network:
    driver: bridge
